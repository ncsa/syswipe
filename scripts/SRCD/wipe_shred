#!/bin/bash

# PREP
DEBUG=0
LOGFILE=/var/log/wipe_shred.log


# FUNCTIONS
logr() {
  logger -t SRCD -p local4.info "$*"
  echo "$*"
  echo "$*" >> "$LOGFILE"
}


die() {
  logr "ERROR: $*"
  exit 1
}


get_valid_devs() {
  # if TRAN is null, then it's a partition or virtual device
  # if TRAN is usb, then it's a USB device (dont wipe the boot USB key)
  lsblk -o kname,tran --paths --json \
  | jq -r '.blockdevices[] | select(.tran != null and .tran != "usb") | .kname'
}


wipe_device() {
  local _full_path_to_device="$1"
  local _action=shred
  local _parms=( "--iterations=1" "--force" "--zero" )
  [[ $DEBUG -eq 1 ]] && _action='echo'
  logr "$(date) START $_full_path_to_device"
  logr "$_action ${_parms[@]} $_full_path_to_device"
  set -x
  $_action "${_parms[@]}" "$_full_path_to_device"
  local _rc=$?
  set +x
  logr "$(date) END $_full_path_to_device"
  return "$_rc"
}


# DO WORK

devices=( $(get_valid_devs) )
if [[ ${#devices[*]} -lt 1 ]] ; then
  die "No wipeable devices found"
fi

# Show what drives were found
logr "Found ${#devices[*]} device(s) ..."
lsblk --paths -o kname,size "${devices[@]}" | tee -a "$LOGFILE"

# Wipe all the drives
for dev in "${devices[@]}"; do
  wipe_device "${dev}" || logr "...failed" &
done

# wait for all the "shred" procs to finish
wait

logr "Done. Wiped ${#devices[*]} device(s) in ${SECONDS} seconds"

exit 0
