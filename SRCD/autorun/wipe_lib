#!/bin/bash

#
# VARIABLES
#
PRG="$(basename $0)"
DEBUG=0 #set to 1 to enable debugging
DEVICES_FILE=/root/disks_to_wipe
LOCK_FILE=/root/disk_wipe_in_progress
LOGFILE=/var/log/"$PRG".log

#
# FUNCTIONS
#
logr() {
  logger -t SRCD -p local4.info "$*"
  echo "$*"
  echo "$*" >> "$LOGFILE"
}

die() {
  logr "ERROR: $*"
  exit 1
}

warn() {
  logr "WARN: $*"
}

info() {
  logr "INFO: $*"
}


datetime() {
  # print current datetime as a string
  date "+%FT%T"
}


try_lock() {
  [[ -f "${LOCK_FILE}" ]] && return 1
  touch "${LOCK_FILE}"
  return 0
}


release_lock() {
  rm "${LOCK_FILE}"
}


get_dev_size() {
  # INPUT
  # 1. device name, in /dev/<KNAME> format
  # OUTPUT
  #   size in bytes
  [[ $DEBUG -eq 1 ]] && set -x
  local _devname="$1"
  lsblk -b -o size "$_devname" \
  | tail -1
}


get_write_rate() {
  # INPUT
  # 1. device name, in /dev/<KNAME> format
  # OUTPUT
  #   rate in bytes / second
  local _dev=$( basename "${1}" )
  rate_kb=$( iostat -d -k --dec=0 "$_dev" \
  | grep "^$_dev" \
  | awk '{print $4}' )
  bc <<< "$rate_kb * 1024"
}


get_written_sofar() {
  # INPUT
  # 1. device name, in /dev/<KNAME> format
  # OUTPUT
  #   total bytes written to device since system start
  local _dev=$( basename "${1}" )
  sofar_kb=$( iostat -d -k --dec=0 "$_dev" \
  | grep "^$_dev" \
  | awk '{print $7}' )
  bc <<< "$sofar_kb * 1024"

}


wipe_device() {
  local _full_path_to_device="$1"
  local _action='shred'
  local _parms=( "--iterations=1" "--force" "--zero" )
  local _start=$SECONDS
  local _end _elapsed _rc _size _sizeMB _sizeGB _iorate
  [[ $DEBUG -eq 1 ]] && {
    _action='echo'
    set -x
  }
  info "$(date) START WIPE '$_full_path_to_device'"
  info "$_action ${_parms[@]} $_full_path_to_device"
  $_action "${_parms[@]}" "$_full_path_to_device"
  _rc=$?
  info "$(date) END WIPE '$_full_path_to_device'"
  _end=$SECONDS
  _elapsed=$( bc <<< "$_end - $_start" )
  [[ $DEBUG -eq 1 ]] && _elapsed=3600
  _size=$( get_dev_size $_full_path_to_device )
  _sizeMB=$( bc <<< "$_size / 1000 / 1000")
  _sizeGB=$( bc <<< "$_size / 1000 / 1000 / 1000")
  _iorate=$( bc <<< "$_sizeMB / $_elapsed" )
  info "$(date) Wiped $_sizeGB GB in $_elapsed seconds @ $_iorate MB/s"
  return "$_rc"
}
